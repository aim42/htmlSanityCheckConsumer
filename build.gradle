
buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }

    dependencies {
        // in case of mavenLocal(), the following line is valid:
        classpath (group: 'org.aim42',

        // in case of using the official Gradle plugin repository:
        //classpath (group: 'gradle.plugin.org.aim42',
                name: 'htmlSanityCheck',
                version: '0.9.5-SNAPSHOT')

        classpath (group: 'org.asciidoctor',
                    name: 'asciidoctor-gradle-plugin',
                    version: '1.5.2')
    }
}

// ==== path definitions =====
// ===========================

// location of AsciiDoc files
def asciidocSrcPath = "$projectDir/src/asciidoc"

// location of images used in AsciiDoc documentation
def srcImagesPath = "$asciidocSrcPath/images"

// results of asciidoc compilation (HTML)
// (input for htmlSanityCheck)
// this is the default path for asciidoc-gradle-convert
def htmlOutputPath = "$buildDir/asciidoc/html5"

// images used by generated html
def targetImagesPath =   htmlOutputPath + "/images"

// where HTMLSanityCheck checking results ares stored
def checkingResultsPath = "$buildDir/report/htmlchecks"



// ==== asciidoctor ==========
// ===========================

apply plugin: 'org.asciidoctor.convert'

asciidoctor {
//    outputDir = new File( htmlOutputPath )
    sourceDir = new File( asciidocSrcPath )

    options backends: ['html5'],
            doctype: 'book',
            icons: 'font',
            sectlink: true,
            sectanchors: true

    resources {
        from( srcImagesPath )
        into targetImagesPath
    }


}

// ========================================================
apply plugin: 'org.aim42.htmlSanityCheck'


htmlSanityCheck {

    // ensure asciidoctor->html runs first
    // and images are copied to build directory

    dependsOn asciidoctor

    sourceDir = new File( htmlOutputPath )

    // files to check, in Set-notation
    sourceDocuments = [ "many-errors.html", "no-errors.html"]

    // where to put results of sanityChecks...
    checkingResultsDir = new File( checkingResultsPath )

    // false: restrict checks to local resources
    // true:  also check external (e.g. http, https...) links.
    checkExternalLinks = false
}


// when called without arguments, gradle will execute the default:
defaultTasks 'htmlSanityCheck'


task info(
        description: "info on several paths"
) <<
        {
            println "project.name         : " + project.name
            println "projectDir           : " + projectDir
            println "buildDir             : " + buildDir
            println "="*100
            println "asciidoc src files   : " + asciidocSrcPath
            println "source images        : " + srcImagesPath
            println "asciidoc html output : " + htmlOutputPath
            println "target images path   : " + targetImagesPath
            println "checkingResultsPath  : " + checkingResultsPath
        }
