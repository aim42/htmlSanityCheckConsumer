
buildscript {
    repositories {
        maven {
            url uri('../repo')
        }
        jcenter()
        maven {
            name 'Bintray Asciidoctor repo'
            url  'http://dl.bintray.com/content/aalmiray/asciidoctor'
        }
        maven {
            name 'Bintray HtmlSanityCheck repo'
            url 'http://dl.bintray.com/content/gernotstarke/HtmlSanityCheck'
        }
        mavenCentral()
    }

    dependencies {
        classpath (group: 'org.aim42',
                name: 'HtmlSanityCheck-gradle-plugin',
                version: '0.5.3')

        classpath (group: 'org.asciidoctor',
                    name: 'asciidoctor-gradle-plugin',
                    version: '1.5.0')
    }
}

// ==== path definitions =====
// ===========================

// location of AsciiDoc files
def asciidocSrcPath = "$projectDir/src/asciidoc"

// location of images used in AsciiDoc documentation
def srcImagesPath = "$asciidocSrcPath/images"

// results of asciidoc compilitation (HTML) is stored
// (input for htmlSanityCheck)
def htmlOutputPath = "$buildDir/docs"

// images used by generated html
def targetImagesPath =   htmlOutputPath + "/images"

// where HTMLSanityCheck checking results ares stored
def checkingResultsPath = "$buildDir/report/htmlchecks"



// ==== asciidoctor ==========
// ===========================

apply plugin: 'org.asciidoctor.gradle.asciidoctor'

asciidoctor {
    outputDir = new File( htmlOutputPath )
    sourceDir = new File( asciidocSrcPath )
    options = [
            attributes: [
                    imagesdir   : 'images'
            ]
    ]

}


// ==== copy images into build/docs directory =====
task copyImages(
        type: Copy,
        description: 'copy images into build output folder'
) {
    from srcImagesPath
    into targetImagesPath
    include( '**/*.jpg', '**/*.png', '**/*.svg')
}




copyImages.mustRunAfter asciidoctor


apply plugin: 'org.aim42.HtmlSanityCheck-gradle-plugin'


htmlSanityCheck {

    // ensure asciidoctor->html runs first
    // and images are copied to build directory

    // comment next line to allow checking of other files..
    dependsOn asciidoctor, copyImages

    sourceDir = new File( htmlOutputPath )

    // files to check, in Set-notation
    sourceDocuments = [ "many-errors.html", "no-errors.html"]

    // where to put results of sanityChecks...
    checkingResultsDir = new File( checkingResultsPath )

    // false: restrict checks to local resources
    // true:  also check external (e.g. http, https...) links.
    checkExternalLinks = false
}


task info(
        description: "info on several paths"
) <<
        {
            println "project.name         : " + project.name
            println "projectDir           : " + projectDir
            println "buildDir             : " + buildDir
            println "="*100
            println "asciidoc src files   : " + asciidocSrcPath
            println "source images        : " + srcImagesPath
            println "asciidoc html output : " + htmlOutputPath
            println "target images path   : " + targetImagesPath
            println "checkingResultsPath  : " + checkingResultsPath
        }
