
buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        // in case of mavenLocal(), the following line is valid:
        classpath(group: 'org.aim42',

                // in case of using the official Gradle plugin repository:
                //classpath (group: 'gradle.plugin.org.aim42',
                name: 'htmlSanityCheck',
                version: '0.9.6-SNAPSHOT')

    }
}

plugins {
    id 'org.asciidoctor.convert' version '1.5.2'
}

project.version = "0.2"


// ==== path definitions =====
// ===========================
ext {
    srcDir = "$projectDir/src/asciidoc"

    // location of AsciiDoc files
    asciidocSrcPath = "$projectDir/src/asciidoc"

// location of images used in AsciiDoc documentation
    srcImagesPath = "$asciidocSrcPath/images"

// results of asciidoc compilation (HTML)
// (input for htmlSanityCheck)
// this is the default path for asciidoc-gradle-convert
    htmlOutputPath = "$buildDir"

// images used by generated html
    targetImagesPath = "$buildDir/images"

// where HTMLSanityCheck checking results ares stored
    checkingResultsPath = "$buildDir/report/htmlchecks"

}

// ==== asciidoctor ==========
// ===========================

apply plugin: 'org.asciidoctor.convert'

asciidoctor {
    outputDir = file(buildDir)
    sourceDir = file(srcDir)

    sources {
        include "many-errors.adoc", "no-errors.adoc"
    }

    attributes = [
            doctype    : 'book',
            icons      : 'font',
            sectlink   : true,
            sectanchors: true]

    resources {
        from(srcImagesPath) { include '**' }
        into "./images"
    }


}

// ========================================================
apply plugin: 'org.aim42.htmlSanityCheck'


htmlSanityCheck {

    // ensure asciidoctor->html runs first
    // and images are copied to build directory

    dependsOn asciidoctor

    sourceDir = new File("${buildDir}/html5")

    // files to check, in Set-notation
    sourceDocuments = ["many-errors.html", "no-errors.html"]

    // where to put results of sanityChecks...
    checkingResultsDir = new File(checkingResultsPath)

    // false: restrict checks to local resources
    // true:  also check external (e.g. http, https...) links.
    checkExternalLinks = false
}

// when called without arguments, gradle will execute the default:
defaultTasks 'htmlSanityCheck'


task info(
        description: "info on several paths"
) <<
        {
            println "project.name         : " + project.name
            println "projectDir           : " + projectDir
            println "buildDir             : " + buildDir
            println "=" * 100
            println "asciidoc src files   : " + asciidocSrcPath
            println "source images        : " + srcImagesPath
            println "asciidoc html output : " + htmlOutputPath
            println "target images path   : " + targetImagesPath
            println "checkingResultsPath  : " + checkingResultsPath
        }
